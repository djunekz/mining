#!/usr/bin/env python2
# author : djunekz
# -*- coding: utf-8 -*-

from marshal import *
import os, sys, time
import fileinput
import argparse

#color variable
N = '\033[0m'
D = '\033[90m'
W = '\033[1;37m'
B = '\033[1;34m'
R = '\033[1;31m'
G = '\033[1;32m'
Y = '\033[1;33m'
C = '\033[1;36m'
ask= G + '[' + W + 'Wallet' + G + ']'
upd= Y + '[' + G + '+' + Y + ']'
sukses= G + '[' + W + '!' + G + ']'
eror= R + '[' + W + '!' + R + ']'

# list coin
coinlist="""
    COIN      COIN NAME         STATUS

 {}[{}>{}]{} PEPE  \33[0m Pepecoin       \33[1;32m[\33[1;33m+\33[1;32m] Runing!
 {}[{}>{}]{} XLM   \33[0m Stellar        \33[1;32m[\33[1;33m+\33[1;32m] Runing!
 {}[{}>{}]{} ETH   \33[0m Ethereum       \33[1;31m[\33[1;33m-\33[1;31m] Maintenance!
 {}[{}>{}]{} LTC   \33[0m Litecoin       \33[1;32m[\33[1;33m+\33[1;32m] Runing!
 {}[{}>{}]{} USDT  \33[0m Tether         \33[1;32m[\33[1;33m+\33[1;32m] Runing!
 {}[{}>{}]{} BCH   \33[0m Bitcoin Cash   \33[1;31m[\33[1;33m-\33[1;31m] Maintenance!
 {}[{}>{}]{} LINK  \33[0m ChainLink      \33[1;31m[\33[1;33m-\33[1;31m] Maintenance!
 {}[{}>{}]{} BOME  \33[0m Book of Meme   \33[1;31m[\33[1;33m-\33[1;31m] Maintenance!
 {}[{}>{}]{} TRX   \33[0m Tron           \33[1;31m[\33[1;33m-\33[1;31m] Maintenance!
 {}[{}>{}]{} SHIB  \33[0m Shiba Inu      \33[1;31m[\33[1;33m-\33[1;31m] Maintenance!
 {}[{}>{}]{} SOL   \33[0m Solana         \33[1;32m[\33[1;33m+\33[1;32m] Runing!
 {}[{}>{}]{} DOGE  \33[0m Dogecoin       \33[1;32m[\33[1;33m+\33[1;32m] Runing!\33[0m

""".format(G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,G,W,G,Y,)

os.system("clear")
banner = """
\33[1;31m       ##########################################
\33[1;31m       ##   \33[1;33m  __  __ _       _        ____    \33[1;31m ##
\33[1;31m       ##   \33[1;33m |  \/  (_)_ __ (_)_ __  / ___|   \33[1;31m ##
\33[1;31m       ##   \33[1;33m | |\/| | | '_ \| | '_ \| |  _    \33[1;31m ##
\33[1;31m       ##   \33[1;33m | |  | | | | | | | | | | |_| |   \33[1;31m ##
\33[1;31m       ##   \33[1;33m |_|  |_|_|_| |_|_|_| |_|\____|   \33[1;31m ##
\33[1;31m       ##                                      ##
\33[1;31m       ###############\33[1;33m\33[1m T E R M U X \33[1;31m##############\33[0m

      \33[1;34m Author\33[1;36m :\33[1;33m D J U N E K Z
      \33[1;34m Version\33[1;36m:\33[1;31m \33[102m 1.0.0 \33[0m
"""
print banner
print (sukses + " Checking new version")
print
os.system ("sleep 3")
os.system ("git ls-remote --tags --sort=committerdate | grep -o 'v.*' | sort -r | head -1")
def ya():
   try:
      os.system("clear")
      print banner
      print(upd + " Processing Update, please wait don't close session")
      os.system("wget --quiet https://github.com/djunekz/mining/releases/latest/download/mining.tar.gz")
      os.system("tar -xf mining.tar.gz && rm mining.tar.gz")
      os.system("sleep 3")
      print (upd + " Waiting for repacking")
      os.system("sleep 4")
      print(upd + " Done")
      os.system("sleep 2")
      print (sukses + " Update Successful")
      os.system("sleep 2")
      os.system("clear && bash run")
   except KeyboardInterrupt:
      print (eror + " Stopped!")
def no():
   try:
      os.system("clear")
      print banner
      print (eror + " Nothing Update")
      os.system("sleep 3")
      os.system("python2 .termux/main")
   except KeyboardInterrupt:
      print (eror + " Stopped!")

print
tny = raw_input(W + " Update? " + G + " [Y/n] > ")
if tny == "Y" or tny == "y":
   ya()
if tny == "N" or tny == "n":
   no()
else:
   print (eror + " Wrong command!")
